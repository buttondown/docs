---
title: Scheduling emails via the API
navigationTitle: Scheduling emails via the API
---

{% paidFeature feature="api" /%}

We've already covered how to create, list, and update emails using the [Buttondown API](/api-emails-introduction). Here, we’ll take things a step further by learning how to programmatically schedule emails. This may come in handy if:
-   You like to plan ahead.
-   You want to send your email at a time when your subscribers are most likely to read and engage with it.
-   The content of your email is timed to a specific holiday, event, or other notable date.

The best part? We only have to add two new lines of code.

## Schedule your email
As promised, it only takes two extra lines of code to specify your email’s “Status” and “Publish Date.”

{% multilanguageSnippets
   python="public/code/scheduling-emails-via-the-api/1.py"
   ruby="public/code/scheduling-emails-via-the-api/1.rb"
   curl="public/code/scheduling-emails-via-the-api/1.sh"
   javascript="" /%}


### Parameters

Scheduled emails follow a similar set of [parameters](/api-emails-create) as non-scheduled emails —that is, except for the “Publish Date” and “Status.” In this case, “Publish Date” should be a date and time in the future, and “[Status](/api-emails-status)” should be “Scheduled.”

### Results

So you’ve submitted your request to the Buttondown API. How do you know if it worked? There are three ways to check:
- Visit the [API reference](https://buttondown.com/requests) tab in your Buttondown dashboard.
- Compare your response to the ones listed in our “[Emails](/api-emails-create)” API reference doc.
- Take a look at the “[Emails](https://buttondown.com/emails)” tab of your Buttondown dashboard. If your request was successful, you’ll see your email subject, along with a status of “Scheduled”!

![Email interface](/images/email-interface/scheduling-emails-api-reference-emails-tab-2.png)


## Reschedule your email

Change your mind about your email's pub date? No worries—it’s a quick fix. All you need is an "Email ID" and a few more lines of code.

How do you find your "Email ID" you may ask? There are two ways:
- Pinpoint your "Email ID" in the response of your last successful request for that particular email.
- Mosey over to the “[Emails](https://buttondown.com/emails)” tab of your Buttondown dashboard, and click on the email in question. From there, you can copy the "Email ID" from the email’s URL.

![Sample "Email ID" in URL](/images/emails/scheduling-emails-api-reference-email-id.png)

Once you have your "Email ID" at the ready, you can use the following code to update your "Publish Date."

{% multilanguageSnippets
   python="public/code/scheduling-emails-via-the-api/2.py"
   ruby="public/code/scheduling-emails-via-the-api/2.rb"
   curl="public/code/scheduling-emails-via-the-api/2.sh"
   javascript="" /%}

## Unschedule your email

Stuff happens. If you decide that you’d rather save your scheduled email as a draft for later, you can do so by changing your email’s "[Status](/api-emails-status)."

{% multilanguageSnippets
   python="public/code/scheduling-emails-via-the-api/3.py"
   ruby="public/code/scheduling-emails-via-the-api/3.rb"
   curl="public/code/scheduling-emails-via-the-api/3.sh"
   javascript="" /%}

{% supportSnippet /%}
